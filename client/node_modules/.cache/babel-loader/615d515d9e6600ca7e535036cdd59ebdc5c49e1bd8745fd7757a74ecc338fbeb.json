{"ast":null,"code":"import axios from 'axios';\n\n// Configuração do Axios\nconst api = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? '' : 'http://localhost:3001',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Services para o Dashboard\nexport const dashboardService = {\n  getSummary: () => api.get('/dashboard/summary'),\n  getOrdersPerDay: () => api.get('/dashboard/orders-per-day'),\n  getTopProducts: () => api.get('/dashboard/top-products')\n};\n\n// Services para Clientes\nexport const clientService = {\n  getAll: () => api.get('/clients'),\n  getById: id => api.get(`/clients/${id}`),\n  create: data => api.post('/clients', data),\n  update: (id, data) => api.put(`/clients/${id}`, data),\n  delete: id => api.delete(`/clients/${id}`)\n};\n\n// Services para Produtos\nexport const productService = {\n  getAll: () => api.get('/products'),\n  getById: id => api.get(`/products/${id}`),\n  create: data => api.post('/products', data),\n  update: (id, data) => api.put(`/products/${id}`, data),\n  delete: id => api.delete(`/products/${id}`)\n};\n\n// Services para Pedidos\nexport const orderService = {\n  getAll: () => api.get('/orders'),\n  getById: id => api.get(`/orders/${id}`),\n  create: data => api.post('/orders', data),\n  update: (id, data) => api.put(`/orders/${id}`, data),\n  delete: id => api.delete(`/orders/${id}`),\n  updateStatus: (id, status) => api.patch(`/orders/${id}/status`, {\n    status\n  }),\n  generatePDF: id => api.get(`/orders/${id}/pdf`, {\n    responseType: 'blob'\n  })\n};\nconst services = {\n  dashboardService,\n  clientService,\n  productService,\n  orderService\n};\nexport default services;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","NODE_ENV","timeout","headers","dashboardService","getSummary","get","getOrdersPerDay","getTopProducts","clientService","getAll","getById","id","data","post","update","put","delete","productService","orderService","updateStatus","status","patch","generatePDF","responseType","services"],"sources":["C:/Users/55819/Downloads/backend-grafica/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Configuração do Axios\r\nconst api = axios.create({\r\n  baseURL: process.env.NODE_ENV === 'production' ? '' : 'http://localhost:3001',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Services para o Dashboard\r\nexport const dashboardService = {\r\n  getSummary: () => api.get('/dashboard/summary'),\r\n  getOrdersPerDay: () => api.get('/dashboard/orders-per-day'),\r\n  getTopProducts: () => api.get('/dashboard/top-products')\r\n};\r\n\r\n// Services para Clientes\r\nexport const clientService = {\r\n  getAll: () => api.get('/clients'),\r\n  getById: (id) => api.get(`/clients/${id}`),\r\n  create: (data) => api.post('/clients', data),\r\n  update: (id, data) => api.put(`/clients/${id}`, data),\r\n  delete: (id) => api.delete(`/clients/${id}`)\r\n};\r\n\r\n// Services para Produtos\r\nexport const productService = {\r\n  getAll: () => api.get('/products'),\r\n  getById: (id) => api.get(`/products/${id}`),\r\n  create: (data) => api.post('/products', data),\r\n  update: (id, data) => api.put(`/products/${id}`, data),\r\n  delete: (id) => api.delete(`/products/${id}`)\r\n};\r\n\r\n// Services para Pedidos\r\nexport const orderService = {\r\n  getAll: () => api.get('/orders'),\r\n  getById: (id) => api.get(`/orders/${id}`),\r\n  create: (data) => api.post('/orders', data),\r\n  update: (id, data) => api.put(`/orders/${id}`, data),\r\n  delete: (id) => api.delete(`/orders/${id}`),\r\n  updateStatus: (id, status) => api.patch(`/orders/${id}/status`, { status }),\r\n  generatePDF: (id) => api.get(`/orders/${id}/pdf`, { responseType: 'blob' })\r\n};\r\n\r\nconst services = {\r\n  dashboardService,\r\n  clientService,\r\n  productService,\r\n  orderService\r\n};\r\n\r\nexport default services;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}