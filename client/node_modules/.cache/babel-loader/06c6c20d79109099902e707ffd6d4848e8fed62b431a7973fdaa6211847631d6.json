{"ast":null,"code":"import axios from 'axios';\n\n// Configuração do Axios\nconst api = axios.create({\n  baseURL: 'http://localhost:3001',\n  // Apontando para o servidor na porta correta\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: false\n});\n\n// Para debug\napi.interceptors.request.use(request => {\n  console.log('API Request:', request.method, request.url);\n  return request;\n});\napi.interceptors.response.use(response => {\n  console.log('API Response:', response.status, response.data);\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  console.error('API Error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n  return Promise.reject(error);\n});\n\n// Services para o Dashboard\nexport const dashboardService = {\n  getSummary: () => api.get('/api/dashboard/summary'),\n  getOrdersPerDay: () => api.get('/api/dashboard/orders-per-day'),\n  getTopProducts: () => api.get('/api/dashboard/top-products'),\n  getDailyRevenue: date => api.get(`/dashboard/daily-revenue?date=${date}`),\n  getMonthlyRevenue: month => api.get(`/dashboard/monthly-revenue?month=${month}`)\n};\n\n// Services para Clientes\nexport const clientService = {\n  getAll: () => api.get('/api/clients'),\n  getById: id => api.get(`/api/clients/${id}`),\n  create: data => api.post('/api/clients', data),\n  update: (id, data) => api.put(`/api/clients/${id}`, data),\n  delete: id => api.delete(`/api/clients/${id}`)\n};\n\n// Services para Produtos\nexport const productService = {\n  getAll: () => api.get('/api/products'),\n  getById: id => api.get(`/api/products/${id}`),\n  create: data => api.post('/api/products', data),\n  update: (id, data) => api.put(`/api/products/${id}`, data),\n  delete: id => api.delete(`/api/products/${id}`)\n};\n\n// Services para Pedidos\nexport const orderService = {\n  getAll: () => api.get('/api/orders'),\n  getById: id => api.get(`/api/orders/${id}`),\n  create: data => api.post('/api/orders', data),\n  update: (id, data) => api.put(`/api/orders/${id}`, data),\n  delete: id => api.delete(`/api/orders/${id}`),\n  updateStatus: (id, status) => api.patch(`/api/orders/${id}/status`, {\n    status\n  }),\n  generatePDF: id => api.get(`/api/orders/${id}/pdf`, {\n    responseType: 'blob'\n  })\n};\nconst services = {\n  dashboardService,\n  clientService,\n  productService,\n  orderService\n};\nexport default services;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","withCredentials","interceptors","request","use","console","log","method","url","response","status","data","error","_error$response","_error$response2","message","Promise","reject","dashboardService","getSummary","get","getOrdersPerDay","getTopProducts","getDailyRevenue","date","getMonthlyRevenue","month","clientService","getAll","getById","id","post","update","put","delete","productService","orderService","updateStatus","patch","generatePDF","responseType","services"],"sources":["C:/Users/55819/Downloads/backend-grafica/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Configuração do Axios\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3001', // Apontando para o servidor na porta correta\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  },\r\n  withCredentials: false\r\n});\r\n\r\n// Para debug\r\napi.interceptors.request.use(request => {\r\n  console.log('API Request:', request.method, request.url);\r\n  return request;\r\n});\r\n\r\napi.interceptors.response.use(\r\n  response => {\r\n    console.log('API Response:', response.status, response.data);\r\n    return response;\r\n  },\r\n  error => {\r\n    console.error('API Error:', error.response?.status, error.response?.data || error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Services para o Dashboard\r\nexport const dashboardService = {\r\n  getSummary: () => api.get('/api/dashboard/summary'),\r\n  getOrdersPerDay: () => api.get('/api/dashboard/orders-per-day'),\r\n  getTopProducts: () => api.get('/api/dashboard/top-products'),\r\n  getDailyRevenue: (date) => api.get(`/dashboard/daily-revenue?date=${date}`),\r\n  getMonthlyRevenue: (month) => api.get(`/dashboard/monthly-revenue?month=${month}`)\r\n};\r\n\r\n// Services para Clientes\r\nexport const clientService = {\r\n  getAll: () => api.get('/api/clients'),\r\n  getById: (id) => api.get(`/api/clients/${id}`),\r\n  create: (data) => api.post('/api/clients', data),\r\n  update: (id, data) => api.put(`/api/clients/${id}`, data),\r\n  delete: (id) => api.delete(`/api/clients/${id}`)\r\n};\r\n\r\n// Services para Produtos\r\nexport const productService = {\r\n  getAll: () => api.get('/api/products'),\r\n  getById: (id) => api.get(`/api/products/${id}`),\r\n  create: (data) => api.post('/api/products', data),\r\n  update: (id, data) => api.put(`/api/products/${id}`, data),\r\n  delete: (id) => api.delete(`/api/products/${id}`)\r\n};\r\n\r\n// Services para Pedidos\r\nexport const orderService = {\r\n  getAll: () => api.get('/api/orders'),\r\n  getById: (id) => api.get(`/api/orders/${id}`),\r\n  create: (data) => api.post('/api/orders', data),\r\n  update: (id, data) => api.put(`/api/orders/${id}`, data),\r\n  delete: (id) => api.delete(`/api/orders/${id}`),\r\n  updateStatus: (id, status) => api.patch(`/api/orders/${id}/status`, { status }),\r\n  generatePDF: (id) => api.get(`/api/orders/${id}/pdf`, { responseType: 'blob' })\r\n};\r\n\r\nconst services = {\r\n  dashboardService,\r\n  clientService,\r\n  productService,\r\n  orderService\r\n};\r\n\r\nexport default services;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}