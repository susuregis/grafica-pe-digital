{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Typography,Grid,Box,CircularProgress,Alert}from'@mui/material';import{AssignmentOutlined,ShoppingCartOutlined,PersonOutlineOutlined,InventoryOutlined}from'@mui/icons-material';import DashboardCard,{OrdersChart}from'../components/DashboardComponents';import{dashboardService}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[summaryData,setSummaryData]=useState({totalOrders:0,totalClients:0,totalProducts:0,pendingOrders:0});const[chartData,setChartData]=useState({labels:[],datasets:[{label:'Pedidos',data:[],backgroundColor:'rgba(25, 118, 210, 0.6)'}]});useEffect(()=>{const fetchDashboardData=async()=>{try{setLoading(true);setError(null);// Carrega os dados do resumo\nconst summaryRes=await dashboardService.getSummary();setSummaryData(summaryRes.data);// Carrega os dados do gráfico de pedidos por dia\nconst ordersPerDayRes=await dashboardService.getOrdersPerDay();// Preparar dados para o gráfico\nconst labels=ordersPerDayRes.data.map(item=>item.date);const values=ordersPerDayRes.data.map(item=>item.count);setChartData({labels,datasets:[{label:'Pedidos',data:values,backgroundColor:'rgba(25, 118, 210, 0.6)'}]});}catch(err){console.error('Erro ao carregar dados do dashboard:',err);setError('Não foi possível carregar os dados do dashboard. Tente novamente mais tarde.');}finally{setLoading(false);}};fetchDashboardData();},[]);return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Dashboard\"}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:3},children:error}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(DashboardCard,{title:\"Total de Pedidos\",value:summaryData.totalOrders,loading:loading,icon:/*#__PURE__*/_jsx(ShoppingCartOutlined,{}),color:\"primary\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(DashboardCard,{title:\"Pedidos Pendentes\",value:summaryData.pendingOrders,loading:loading,icon:/*#__PURE__*/_jsx(AssignmentOutlined,{}),color:\"warning\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(DashboardCard,{title:\"Clientes Cadastrados\",value:summaryData.totalClients,loading:loading,icon:/*#__PURE__*/_jsx(PersonOutlineOutlined,{}),color:\"success\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:/*#__PURE__*/_jsx(DashboardCard,{title:\"Produtos Cadastrados\",value:summaryData.totalProducts,loading:loading,icon:/*#__PURE__*/_jsx(InventoryOutlined,{}),color:\"info\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:8,children:/*#__PURE__*/_jsx(OrdersChart,{data:chartData,loading:loading})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","Typography","Grid","Box","CircularProgress","Alert","AssignmentOutlined","ShoppingCartOutlined","PersonOutlineOutlined","InventoryOutlined","DashboardCard","OrdersChart","dashboardService","jsx","_jsx","jsxs","_jsxs","Dashboard","loading","setLoading","error","setError","summaryData","setSummaryData","totalOrders","totalClients","totalProducts","pendingOrders","chartData","setChartData","labels","datasets","label","data","backgroundColor","fetchDashboardData","summaryRes","getSummary","ordersPerDayRes","getOrdersPerDay","map","item","date","values","count","err","console","children","variant","gutterBottom","severity","sx","mb","container","spacing","xs","sm","md","title","value","icon","color"],"sources":["C:/Users/55819/Downloads/backend-grafica/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Typography, \r\n  Grid, \r\n  Box, \r\n  CircularProgress,\r\n  Alert\r\n} from '@mui/material';\r\nimport { \r\n  AssignmentOutlined, \r\n  ShoppingCartOutlined, \r\n  PersonOutlineOutlined, \r\n  InventoryOutlined \r\n} from '@mui/icons-material';\r\nimport DashboardCard, { OrdersChart } from '../components/DashboardComponents';\r\nimport { dashboardService } from '../services/api';\r\n\r\nconst Dashboard = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [summaryData, setSummaryData] = useState({\r\n    totalOrders: 0,\r\n    totalClients: 0,\r\n    totalProducts: 0,\r\n    pendingOrders: 0\r\n  });\r\n  const [chartData, setChartData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: 'Pedidos',\r\n        data: [],\r\n        backgroundColor: 'rgba(25, 118, 210, 0.6)',\r\n      }\r\n    ]\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        // Carrega os dados do resumo\r\n        const summaryRes = await dashboardService.getSummary();\r\n        setSummaryData(summaryRes.data);\r\n        \r\n        // Carrega os dados do gráfico de pedidos por dia\r\n        const ordersPerDayRes = await dashboardService.getOrdersPerDay();\r\n        \r\n        // Preparar dados para o gráfico\r\n        const labels = ordersPerDayRes.data.map(item => item.date);\r\n        const values = ordersPerDayRes.data.map(item => item.count);\r\n        \r\n        setChartData({\r\n          labels,\r\n          datasets: [\r\n            {\r\n              label: 'Pedidos',\r\n              data: values,\r\n              backgroundColor: 'rgba(25, 118, 210, 0.6)',\r\n            }\r\n          ]\r\n        });\r\n        \r\n      } catch (err) {\r\n        console.error('Erro ao carregar dados do dashboard:', err);\r\n        setError('Não foi possível carregar os dados do dashboard. Tente novamente mais tarde.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Dashboard\r\n      </Typography>\r\n      \r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      <Grid container spacing={3}>\r\n        {/* Cards de resumo */}\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <DashboardCard \r\n            title=\"Total de Pedidos\" \r\n            value={summaryData.totalOrders} \r\n            loading={loading}\r\n            icon={<ShoppingCartOutlined />}\r\n            color=\"primary\"\r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <DashboardCard \r\n            title=\"Pedidos Pendentes\" \r\n            value={summaryData.pendingOrders} \r\n            loading={loading}\r\n            icon={<AssignmentOutlined />}\r\n            color=\"warning\"\r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <DashboardCard \r\n            title=\"Clientes Cadastrados\" \r\n            value={summaryData.totalClients} \r\n            loading={loading}\r\n            icon={<PersonOutlineOutlined />}\r\n            color=\"success\"\r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <DashboardCard \r\n            title=\"Produtos Cadastrados\" \r\n            value={summaryData.totalProducts} \r\n            loading={loading}\r\n            icon={<InventoryOutlined />}\r\n            color=\"info\"\r\n          />\r\n        </Grid>\r\n        \r\n        {/* Gráfico de pedidos por dia */}\r\n        <Grid item xs={12} md={8}>\r\n          <OrdersChart data={chartData} loading={loading} />\r\n        </Grid>\r\n        \r\n        {/* Widget de pedidos recentes ou produtos mais vendidos pode ser adicionado aqui */}\r\n        <Grid item xs={12} md={4}>\r\n          {/* Componente para produtos mais vendidos pode ser adicionado aqui */}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OACEC,UAAU,CACVC,IAAI,CACJC,GAAG,CACHC,gBAAgB,CAChBC,KAAK,KACA,eAAe,CACtB,OACEC,kBAAkB,CAClBC,oBAAoB,CACpBC,qBAAqB,CACrBC,iBAAiB,KACZ,qBAAqB,CAC5B,MAAO,CAAAC,aAAa,EAAIC,WAAW,KAAQ,mCAAmC,CAC9E,OAASC,gBAAgB,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACqB,KAAK,CAAEC,QAAQ,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACuB,WAAW,CAAEC,cAAc,CAAC,CAAGxB,QAAQ,CAAC,CAC7CyB,WAAW,CAAE,CAAC,CACdC,YAAY,CAAE,CAAC,CACfC,aAAa,CAAE,CAAC,CAChBC,aAAa,CAAE,CACjB,CAAC,CAAC,CACF,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAG9B,QAAQ,CAAC,CACzC+B,MAAM,CAAE,EAAE,CACVC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,SAAS,CAChBC,IAAI,CAAE,EAAE,CACRC,eAAe,CAAE,yBACnB,CAAC,CAEL,CAAC,CAAC,CAEFlC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmC,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACFhB,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd;AACA,KAAM,CAAAe,UAAU,CAAG,KAAM,CAAAxB,gBAAgB,CAACyB,UAAU,CAAC,CAAC,CACtDd,cAAc,CAACa,UAAU,CAACH,IAAI,CAAC,CAE/B;AACA,KAAM,CAAAK,eAAe,CAAG,KAAM,CAAA1B,gBAAgB,CAAC2B,eAAe,CAAC,CAAC,CAEhE;AACA,KAAM,CAAAT,MAAM,CAAGQ,eAAe,CAACL,IAAI,CAACO,GAAG,CAACC,IAAI,EAAIA,IAAI,CAACC,IAAI,CAAC,CAC1D,KAAM,CAAAC,MAAM,CAAGL,eAAe,CAACL,IAAI,CAACO,GAAG,CAACC,IAAI,EAAIA,IAAI,CAACG,KAAK,CAAC,CAE3Df,YAAY,CAAC,CACXC,MAAM,CACNC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,SAAS,CAChBC,IAAI,CAAEU,MAAM,CACZT,eAAe,CAAE,yBACnB,CAAC,CAEL,CAAC,CAAC,CAEJ,CAAE,MAAOW,GAAG,CAAE,CACZC,OAAO,CAAC1B,KAAK,CAAC,sCAAsC,CAAEyB,GAAG,CAAC,CAC1DxB,QAAQ,CAAC,8EAA8E,CAAC,CAC1F,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDgB,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEnB,KAAA,CAACb,GAAG,EAAA4C,QAAA,eACFjC,IAAA,CAACb,UAAU,EAAC+C,OAAO,CAAC,IAAI,CAACC,YAAY,MAAAF,QAAA,CAAC,WAEtC,CAAY,CAAC,CAEZ3B,KAAK,eACJN,IAAA,CAACT,KAAK,EAAC6C,QAAQ,CAAC,OAAO,CAACC,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAL,QAAA,CACnC3B,KAAK,CACD,CACR,cAEDJ,KAAA,CAACd,IAAI,EAACmD,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAP,QAAA,eAEzBjC,IAAA,CAACZ,IAAI,EAACuC,IAAI,MAACc,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAV,QAAA,cAC9BjC,IAAA,CAACJ,aAAa,EACZgD,KAAK,CAAC,kBAAkB,CACxBC,KAAK,CAAErC,WAAW,CAACE,WAAY,CAC/BN,OAAO,CAAEA,OAAQ,CACjB0C,IAAI,cAAE9C,IAAA,CAACP,oBAAoB,GAAE,CAAE,CAC/BsD,KAAK,CAAC,SAAS,CAChB,CAAC,CACE,CAAC,cAEP/C,IAAA,CAACZ,IAAI,EAACuC,IAAI,MAACc,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAV,QAAA,cAC9BjC,IAAA,CAACJ,aAAa,EACZgD,KAAK,CAAC,mBAAmB,CACzBC,KAAK,CAAErC,WAAW,CAACK,aAAc,CACjCT,OAAO,CAAEA,OAAQ,CACjB0C,IAAI,cAAE9C,IAAA,CAACR,kBAAkB,GAAE,CAAE,CAC7BuD,KAAK,CAAC,SAAS,CAChB,CAAC,CACE,CAAC,cAEP/C,IAAA,CAACZ,IAAI,EAACuC,IAAI,MAACc,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAV,QAAA,cAC9BjC,IAAA,CAACJ,aAAa,EACZgD,KAAK,CAAC,sBAAsB,CAC5BC,KAAK,CAAErC,WAAW,CAACG,YAAa,CAChCP,OAAO,CAAEA,OAAQ,CACjB0C,IAAI,cAAE9C,IAAA,CAACN,qBAAqB,GAAE,CAAE,CAChCqD,KAAK,CAAC,SAAS,CAChB,CAAC,CACE,CAAC,cAEP/C,IAAA,CAACZ,IAAI,EAACuC,IAAI,MAACc,EAAE,CAAE,EAAG,CAACC,EAAE,CAAE,CAAE,CAACC,EAAE,CAAE,CAAE,CAAAV,QAAA,cAC9BjC,IAAA,CAACJ,aAAa,EACZgD,KAAK,CAAC,sBAAsB,CAC5BC,KAAK,CAAErC,WAAW,CAACI,aAAc,CACjCR,OAAO,CAAEA,OAAQ,CACjB0C,IAAI,cAAE9C,IAAA,CAACL,iBAAiB,GAAE,CAAE,CAC5BoD,KAAK,CAAC,MAAM,CACb,CAAC,CACE,CAAC,cAGP/C,IAAA,CAACZ,IAAI,EAACuC,IAAI,MAACc,EAAE,CAAE,EAAG,CAACE,EAAE,CAAE,CAAE,CAAAV,QAAA,cACvBjC,IAAA,CAACH,WAAW,EAACsB,IAAI,CAAEL,SAAU,CAACV,OAAO,CAAEA,OAAQ,CAAE,CAAC,CAC9C,CAAC,cAGPJ,IAAA,CAACZ,IAAI,EAACuC,IAAI,MAACc,EAAE,CAAE,EAAG,CAACE,EAAE,CAAE,CAAE,CAEnB,CAAC,EACH,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}